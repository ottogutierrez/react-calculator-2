{"version":3,"sources":["Calculator.js","App.js","index.js"],"names":["Calculator","initialOperationStack","operand1","operand2","operation","_useState","useState","_useState2","Object","slicedToArray","displayValue","setDisplayValue","_useState3","_useState4","operationStack","setOperationStack","_useState5","_useState6","operationActive","setOperationActive","_useState7","_useState8","nextOperand","setNextOperand","_useState9","_useState10","performOperationFlag","setPerformOperationFlag","_useState11","_useState12","historyStack","setHistoryStack","handleClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","digitEntered","wrap","_context","prev","next","target","innerText","t0","abrupt","objectSpread2","parseFloat","stop","_x","apply","this","arguments","useEffect","performOperation","result","operationString","concat","react_default","createElement","className","map","btnText","idx","onClick","key","App","src_Calculator","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cde6f2a8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Calculator.css\";\n\nconst Calculator = () => {\n  const initialOperationStack = {\n    operand1: 0,\n    operand2: 0,\n    operation: \"\"\n  };\n\n  const [displayValue, setDisplayValue] = useState(\"0\");\n  const [operationStack, setOperationStack] = useState(initialOperationStack);\n  const [operationActive, setOperationActive] = useState(false);\n  const [nextOperand, setNextOperand] = useState(true);\n  const [performOperationFlag, setPerformOperationFlag] = useState(false);\n  const [historyStack, setHistoryStack] = useState(\"\");\n\n  const handleClick = async event => {\n    const digitEntered = event.target.innerText;\n    switch (digitEntered) {\n      case \"AC\":\n        setDisplayValue(\"0\");\n        setOperationStack(initialOperationStack);\n        setOperationActive(false);\n        setNextOperand(true);\n        break;\n      case \"+\":\n      case \"x\":\n      case \"-\":\n      case \"/\":\n        if (!operationActive) {\n          setOperationStack({\n            ...operationStack,\n            operation: digitEntered,\n            operand1: parseFloat(displayValue)\n          });\n          setOperationActive(true);\n          setNextOperand(false);\n        }\n        break;\n      case \"=\":\n        if (operationActive) {\n          await setOperationStack({\n            ...operationStack,\n            operand2: parseFloat(displayValue)\n          });\n          setOperationActive(false);\n          setNextOperand(true);\n          setPerformOperationFlag(true);\n        }\n        break;\n      default:\n        if (!nextOperand) {\n          setDisplayValue(digitEntered);\n          setNextOperand(true);\n        } else {\n          setDisplayValue(\n            displayValue === \"0\" ? digitEntered : displayValue + digitEntered\n          );\n        }\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (performOperationFlag) {\n      performOperation();\n      setPerformOperationFlag(false);\n    }\n  }, [performOperationFlag, operationStack]);\n\n  const performOperation = () => {\n    // Because of useEffect call, we make sure that at this point, all the operation stack\n    // has been successfully written to\n    var result = 0.0;\n    var operationString = `${operationStack.operand1} ${\n      operationStack.operation\n    } ${operationStack.operand2} =`;\n    switch (operationStack.operation) {\n      case \"+\":\n        result = operationStack.operand1 + operationStack.operand2;\n        operationString = `${operationString} ${result}`;\n        break;\n\n      default:\n        break;\n    }\n    setNextOperand(false);\n    setDisplayValue(result);\n    setHistoryStack(operationString);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"display\">{displayValue}</div>\n      <div className=\"calculator\">\n        {[\n          \"AC\",\n          \"<-\",\n          \"%\",\n          \"/\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"x\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"-\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"+\",\n          \"0\",\n          \".\",\n          \"=\"\n        ].map((btnText, idx) => (\n          <button onClick={handleClick} key={idx}>\n            {btnText}\n          </button>\n        ))}\n      </div>\n      <div className=\"history\">\n        <h3>History</h3>\n        {historyStack}\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Calculator from './Calculator'\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}